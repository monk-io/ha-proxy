namespace: haproxy

haproxy:
  defines: runnable
  metadata:
    defines: metadata
    name: sonarqube
    description: |
      HAProxy is a free and open-source software that provides load balancing and proxying for TCP and HTTP-based applications. 
      It is a popular solution for distributing incoming network traffic across multiple servers to ensure high availability, scalability, and reliability of web applications.
      HAProxy acts as an intermediary between clients (such as web browsers) and servers (such as application servers or databases).    
      It receives incoming requests from clients and forwards them to one or more backend servers based on various algorithms, such as round-robin, least connections, source IP affinity, and more. HAProxy can also perform health checks on backend servers to automatically detect and route traffic away from any unhealthy servers, providing failover capabilities.
    tags: self hosted, Load balancer
    website: http://www.haproxy.org/
    source: https://github.com/haproxy/haproxy
    publisher: "monk.io"  
    icon: https://www.vectorlogo.zone/logos/haproxy/haproxy-ar21.png 
  services:
    haproxy:
      container: haproxy
      port: <- `${haproxy-port-number}` to-i
      protocol: tcp
      host-port: <- `${host-port-number}` to-i
  connections:
    backend:
      runnable: <- $backend-runnable
      service: <- $backend-runnable-service
  containers:
    defines: containers
    haproxy:
      image: 'haproxy'
      image-tag: <- `${haproxy-image}`
      cap-add:
        - CAP_NET_BIND_SERVICE      
  files:
    haproxy-conf:
      container: haproxy
      mode: 0644
      path: /usr/local/etc/haproxy/haproxy.cfg
      contents: <<< files/haproxy.cfg
  variables: 
    backend-hostname:
      type: string
      value: <- connection-hostname("backend")
    backend-port:
      type: string
      value: <- connection-port("backend")
    hostport-port-number:
      type: int
      value: <- $host-port 
    haproxy-image:
      value: <- $haproxy-image-tag
      type: string
    haproxy-port-number:
      value: <- $haproxy-port
      env: port
      type: int
    host-port-number:
      env: internalport
      value: <- $host-port
      type: int         